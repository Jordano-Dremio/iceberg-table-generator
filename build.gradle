plugins {
	id 'java'
	id 'application'
	id("com.diffplug.spotless") version "7.0.2"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

repositories {
	mavenLocal()
	mavenCentral()
}

application {
	mainClass = 'Main'
}

dependencies {
	implementation 'org.apache.iceberg:iceberg-api:1.10.0-SNAPSHOT'
	implementation 'org.apache.iceberg:iceberg-core:1.10.0-SNAPSHOT'
	implementation 'org.apache.iceberg:iceberg-parquet:1.10.0-SNAPSHOT'
	implementation 'org.apache.iceberg:iceberg-data:1.10.0-SNAPSHOT'
	implementation 'org.apache.hadoop:hadoop-common:3.3.1'
	implementation 'org.apache.hadoop:hadoop-aws:3.3.1'
	implementation 'org.apache.hadoop:hadoop-azure:3.3.1'
	implementation 'org.apache.hadoop:hadoop-mapreduce-client-core:3.3.1'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'com.google.cloud.bigdataoss:gcs-connector:hadoop3-2.2.7'
	implementation 'com.beust:jcommander:1.82'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
	implementation 'org.apache.parquet:parquet-hadoop:1.15.1'
}

test {
	useJUnitPlatform()
}

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		leadingSpacesToTabs() // or leadingTabsToSpaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// don't need to set target, it is inferred from java

		// apply a specific flavor of google-java-format
		googleJavaFormat('1.25.2').aosp().reflowLongStrings().skipJavadocFormatting()
		// fix formatting of type annotations
		formatAnnotations()
		// make sure every file has the following copyright header.
		// optionally, Spotless can set copyright years by digging
		// through git history (see "license" section below)
		licenseHeader '/* (C)$YEAR */'
	}
}
